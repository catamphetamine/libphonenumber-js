{"version":3,"sources":["../../source/findNumbers/isValidPreCandidate.js"],"names":["SLASH_SEPARATED_DATES","TIME_STAMPS","TIME_STAMPS_SUFFIX_LEADING","isValidPreCandidate","candidate","offset","text","test","followingText","slice","length"],"mappings":"AAAA;AACA;AACA,IAAMA,wBAAwB,mEAA9B;;AAEA;AACA;AACA;AACA;AACA,IAAMC,cAAc,4CAApB;AACA,IAAMC,6BAA6B,WAAnC;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,IAAhD,EACf;AACC;AACA,KAAIN,sBAAsBO,IAAtB,CAA2BH,SAA3B,CAAJ,EAA2C;AAC1C,SAAO,KAAP;AACA;;AAED;AACA,KAAIH,YAAYM,IAAZ,CAAiBH,SAAjB,CAAJ,EACA;AACC,MAAMI,gBAAgBF,KAAKG,KAAL,CAAWJ,SAASD,UAAUM,MAA9B,CAAtB;AACA,MAAIR,2BAA2BK,IAA3B,CAAgCC,aAAhC,CAAJ,EAAoD;AACnD,UAAO,KAAP;AACA;AACD;;AAED,QAAO,IAAP;AACA","file":"isValidPreCandidate.js","sourcesContent":["// Matches strings that look like dates using \"/\" as a separator.\n// Examples: 3/10/2011, 31/10/96 or 08/31/95.\nconst SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\\d\\/[01]?\\d)|(?:[01]?\\d\\/[0-3]?\\d))\\/(?:[12]\\d)?\\d{2}/\n\n// Matches timestamps.\n// Examples: \"2012-01-02 08:00\".\n// Note that the reg-ex does not include the\n// trailing \":\\d\\d\" -- that is covered by TIME_STAMPS_SUFFIX.\nconst TIME_STAMPS = /[12]\\d{3}[-/]?[01]\\d[-/]?[0-3]\\d +[0-2]\\d$/\nconst TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\\d/\n\nexport default function isValidPreCandidate(candidate, offset, text)\n{\n\t// Skip a match that is more likely to be a date.\n\tif (SLASH_SEPARATED_DATES.test(candidate)) {\n\t\treturn false\n\t}\n\n\t// Skip potential time-stamps.\n\tif (TIME_STAMPS.test(candidate))\n\t{\n\t\tconst followingText = text.slice(offset + candidate.length)\n\t\tif (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}"]}