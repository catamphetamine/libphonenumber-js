{"version":3,"sources":["../source/RFC3966.js"],"names":["is_viable_phone_number","parseRFC3966","text","number","ext","replace","split","part","name","value","result","formatRFC3966","Error"],"mappings":";;AAAA,SAASA,sBAAT,QAAuC,SAAvC;;AAEA;;AAEA;;;;AAIA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EACP;AACC,KAAIC,eAAJ;AACA,KAAIC,YAAJ;;AAEA;AACAF,QAAOA,KAAKG,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;;AAEA,sBAAmBH,KAAKI,KAAL,CAAW,GAAX,CAAnB,kHACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,MADWC,IACX;;AAAA,oBACuBA,KAAKD,KAAL,CAAW,GAAX,CADvB;AAAA;AAAA,MACQE,IADR;AAAA,MACcC,KADd;;AAEC,UAAQD,IAAR;AAEC,QAAK,KAAL;AACCL,aAASM,KAAT;AACA;AACD,QAAK,KAAL;AACCL,UAAMK,KAAN;AACA;AACD,QAAK,eAAL;AACC;AACA;AACA,QAAIA,MAAM,CAAN,MAAa,GAAjB,EAAsB;AACrBN,cAASM,QAAQN,MAAjB;AACA;AACD;AAdF;AAgBA;;AAED;AACA,KAAI,CAACH,uBAAuBG,MAAvB,CAAL,EACA;AACC,SAAO,EAAP;AACA;;AAED,KAAMO,SAAS,EAAEP,cAAF,EAAf;AACA,KAAIC,GAAJ,EAAS;AACRM,SAAON,GAAP,GAAaA,GAAb;AACA;AACD,QAAOM,MAAP;AACA;;AAED;;;;AAIA,OAAO,SAASC,aAAT,QACP;AAAA,KADgCR,MAChC,SADgCA,MAChC;AAAA,KADwCC,GACxC,SADwCA,GACxC;;AACC,KAAI,CAACD,MAAL,EACA;AACC,SAAO,EAAP;AACA;;AAED,KAAIA,OAAO,CAAP,MAAc,GAAlB,EACA;AACC,QAAM,IAAIS,KAAJ,6DAAN;AACA;;AAED,iBAAcT,MAAd,IAAuBC,MAAM,UAAUA,GAAhB,GAAsB,EAA7C;AACA","file":"RFC3966.js","sourcesContent":["import { is_viable_phone_number } from './parse'\n\n// https://www.ietf.org/rfc/rfc3966.txt\n\n/**\n * @param  {string} text - Phone URI (RFC 3966).\n * @return {object} `{ ?number, ?ext }`.\n */\nexport function parseRFC3966(text)\n{\n\tlet number\n\tlet ext\n\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\n\ttext = text.replace(/^tel:/, 'tel=')\n\n\tfor (const part of text.split(';'))\n\t{\n\t\tconst [name, value] = part.split('=')\n\t\tswitch (name)\n\t\t{\n\t\t\tcase 'tel':\n\t\t\t\tnumber = value\n\t\t\t\tbreak\n\t\t\tcase 'ext':\n\t\t\t\text = value\n\t\t\t\tbreak\n\t\t\tcase 'phone-context':\n\t\t\t\t// Only \"country contexts\" are supported.\n\t\t\t\t// \"Domain contexts\" are ignored.\n\t\t\t\tif (value[0] === '+') {\n\t\t\t\t\tnumber = value + number\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\t// If the phone number is not viable, then abort.\n\tif (!is_viable_phone_number(number))\n\t{\n\t\treturn {}\n\t}\n\n\tconst result = { number }\n\tif (ext) {\n\t\tresult.ext = ext\n\t}\n\treturn result\n}\n\n/**\n * @param  {object} - `{ ?number, ?extension }`.\n * @return {string} Phone URI (RFC 3966).\n */\nexport function formatRFC3966({ number, ext })\n{\n\tif (!number)\n\t{\n\t\treturn ''\n\t}\n\n\tif (number[0] !== '+')\n\t{\n\t\tthrow new Error(`\"formatRFC3966()\" expects \"number\" to be in E.164 format.`)\n\t}\n\n\treturn `tel:${number}${ext ? ';ext=' + ext : ''}`\n}"]}